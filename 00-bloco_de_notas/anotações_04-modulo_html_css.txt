<<03-modulo_html_css>> <<Youtube: Curso em Vídeo>>

✦Índice das Informações✦
▷

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: O iframe ainda pode ser usado?

1- O elemento HTML <iframe>
representa um contexto de navegação aninhado, efetivamente incorporando outra página HTML para a página 
atual
<h1>ChatGPT</h1>
    <p>
      Essa é IA (Inteligência Artificial) mais avançada do mundo atualmente:
      <iframe src="https://chat.openai.com/chat" frameborder="0"></iframe>
    </p>

Obs: O conteúdo que estiver entre a tag <iframe> será exibido caso onaveagdor não seja compatível com 
a tag, por isso uma ótima opção é colocar o link do conteúdo que seria exibido
Ex:
<h1>ChatGPT</h1>
    <p>
      Essa é IA (Inteligência Artificial) mais avançada do mundo atualmente:
      <iframe src="https://chat.openai.com/chat" frameborder="0"><a href=""></iframe>
    </p>


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Navegação no iframe

02- Com o Iframe podemos adiocionar diferentes páginas dentro dele dependendo do que você quer que apareça
Para isso você tera que criar links e adionar a propriedade "target" neles, dentro de target você irá 
adiconar o nome que você colocará no iframe, para adionar um nome(não é id ou class) ao iframe 
basta adionar a propriedade "name"
<ul>
      <li>
        <a href="arquivos_iframes/01-index.html" target="iframe1">Página 1</a>
      </li>
      <li>
        <a href="arquivos_iframes/02-index.html" target="iframe1">Página 2</a>
      </li>
      <li>
        <a href="arquivos_iframes/03-index.html" target="iframe1">Página 3</a>
      </li>
    </ul>

<iframe src="" frameborder="0" name="iframe1">
      <p>ERRO</p>
    </iframe> 


03- Propriedade srcdoc=""
Com ela você pode usar html dentro da tag inframe e com isso adionar um conteúdo que será exibido de 
emedianto ao usuário 
Ex:
<iframe
      srcdoc="<h1>Teste</h1><p>Teste do teste</p>"
      frameborder="0"
      name="iframe1"
    >
      <p>ERRO</p>
    </iframe>


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Tornando iframes mais seguros

04- Como proteger sua página do iframe 
Para isso nós usamos o sandbox="sandbox" ele irá proteger a página onde um iframe é adicionado, de 
maneira que ele diz o que o conteúdo do iframe pode fazer ou não. O conteúdo envolvido pelo sandbox é 
separado do conteúdo da página onde está o iframe, obtendo menos privilégios, porém também é possível 
permitir algumas excessões, para isso vocÊ deve adicionar outro comando dentro do sandbox, por ex:
allow-same-origin
allow-forms
allow-script
Etc...
Ex prático:
<iframe
      src="arquivos_iframes/01-iframe.html"
      frameborder="1"
      sandbox="sandbox"
      referrerpolicy="no-referrer"
    >

05- referrerpolicy="no-referrer"
Essa propriedade limita o envio de dados do usuário para a página enviada pro iframe (cookies)
Ex:
<iframe
      src="arquivos_iframes/01-iframe.html"
      frameborder="1"
      sandbox="sandbox"
      referrerpolicy="no-referrer"
    >

06- Informção
Com o iframes podemos incorporar vídeos do youtube, mapas do google maps, slides etc... em nossa página



<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Métodos GET e POST para formulários

07- Diferença entre o método de envio de dados GET e POST (method="GET" method="POST")
✦O método de envio GET faz com quie as informações fornecidas pelo cliente apareça diferetamente na URL,
enquanto o método POST faz com que as informações fiquem um pouco mais escondidas, para acessa-las 
é preciso acessar "Network" no DevTools e ir no arquivo de chamada > clicar em "Header" aparecerá 
as informações fornecidas
✦Formulários com o envio GET são compartilhaveis 
✦GET só consegue enviar até 3000 caracteres
✦Não use GET qiando for solicidado dados sensíveis ao cliente, como senha e cartão de crédito
✦O método GET não é compátivel com o envio de arquivos/fotos, para isso deve se usar o POST


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Elementos number, month, date e time em formulários HTML 

08- propriedades interessantes para a criação de formularios
✦autocomplete
Serve para realziar preenchimento automático de um campo de informações
Variações: (autocomplete="on") (autocomplete="username")
Ex:
<form action="GET" autocomplete="on">

✦placeholder
É um atributo do HTML que cumpre a função de fornecer ao usuário uma dica que descreve o valor 
esperado em um dado campo de entrada
Ex:
placeholder="nome completo"

✦required
Obriga o preenchimento de um determinado campo de informações 

✦minlength/maxlength
Determina a quantidade mínima e máxixa de caracteres em um campo de informações
Ex:
minlength="10"
maxlength="40"

✦step
É usado para definir os incrementos que serão aceitos em uma entrada.
Ex:
step="0.1"


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Formulários com telefone e e-mail

09- EStudar RegEx!

10- Tag: <fieldset> 
É usado para agrupar elementos, assim como labels, dentro de um formulário web
Ex:
<fieldset>
        <legend>Dados pessoais</legend>
        <p>
          <label for="inome">Nome:</label>
          <input
            id="inome"
            type="text"
            placeholder="nome completo"
            minlength="10"
            maxlength="40"
            required
            autocomplete="username"
          />
        </p>
        <p>
          <label for="imedia">Média:</label>
          <input type="number" id="imedia" step="0.1" value="5" required />
        </p>
        <p>
          <label for="iperiodo">Período letivo</label>
          <input id="iperiodo" type="month" required />
        </p>
</fieldset>

11- Tag <legend>
representa um rótulo para o conteúdo do seu ancestral, só pode ser usado um a cada <fieldset> usado
e ele apenas funciona quando está dentro da tag fieldset
Ex:
Tem um ex logo acima


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Elementos color, range e file em HTML

12- <input type="file" />  
Um controle que permite ao usuário selecionar um arquivo (Só fuinciona com o método de envio POST)

13- <input type="range" />
deixam o usuário especificar um valor numérico que não deve ser inferior a um determinado valor, e não mais do
que um valor máximo especificado



<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Select, datalist e textarea em HTML

14- <select> <option> <optgroup> selected
select: representa um controle que apresenta um menu de opções. As opções dentro do menu são representadas pelo 
elemento <option> , que podem ser agrupados por elementos <optgroup>, dentro do elemento optgroup podemos 
adicionar um label. selected serve para pré definir uma das opções. O value="" irá responsável por enviar a
indormação, o que for enviado será lido o que estiver dentro do value e não di option 
Ex prático:
        <p>
          <label for="iest">Estado</label>
          <select name="" id="iest">
            <option value="" selected>--Selecione--</option>
            <optgroup label="Região Sudeste">
              <option value="MG">Minas Gerais</option>
              <option value="RJ">Rio de Janeiro</option>
              <option value="SP">São Paulo</option>
            </optgroup>

            <optgroup label="Região Nordeste">
              <option value="MA">Maranhão</option>
              <option value="PE">Pernambuco</option>
              <option value="RN">Rio Grande do Norte</option>
            </optgroup>
</select>

15- datalist
Mostra uma lista de elementos predefinidos como opção para um caixa de entrada de texto
Ex:
<p>
          <label for="iprof">Profissão</label>
          <input
            type="text"
            placeholder="Informe sua profissão"
            list="ilista"
          />

          <datalist id="ilista">
            <option>A1</option>
            <option>A2</option>
            <option value="a3">A3</option>
            <option value="a4">A4</option>
          </datalist>
</p>

OBS: lembre-se de conecta-los por uma id 

16- <textarea></textarea>
Representa um controle de edição para uma caixa de texto, útil quando você quer permitir ao usuário informar 
um texto extenso em formato livre, como um comentário
Ex:
<textarea
            name=""
            id="imen"
            cols="30"
            rows="10"
            placeholder="Fale um pouco mais sobre você..."
></textarea> 



<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: O que são Media Queries em CSS

17- O que é Media Queries
Facilita o processo de configuração e renderização dos elementos de um site em diferentes tamanhos de tela

18- #Estudar Media Queries


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Criando um site com versão para impressora

18- Como crair duas páginas de estilo para o mesmo arquivo html (Media types)
Para isso usamos as Medias Types, basicamente definem pra qual tipo de media o css que você usa em seu 
site será direcionado, ou seja, para cada dispositivo diferente que você acessa um website, será 
necessário um css diferente também
Ex:
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Site de notícias 01</title>
    <link rel="stylesheet" href="arquivos_css/style_tela.css" media="screen" />
    <link rel="stylesheet" href="arquivos_css/style_print.css" media="print" />
  </head>


✦✦Tipos e descrição de cada uma:

✦All :Para todos os dispositivos.
✦Screen :Para monitores ou outros dispositivos com telas coloridas e com resolução adequada.
✦Handheld: Para dispositivos de mão. Normalmente com telas pequenas e banda limitada.
✦Embossed: Para dispositivos que “imprimem” em braille.
✦Tty: Para dispositivos que utilizam uma grade fixa para exibição de caracteres, como por exemplo, 
teletypes, terminais, dispositivos portáteis com display limitado.
✦Print: Para impressão em papel.
✦Braille: Para dispositivos táteis.
✦Projection: Para apresentações, como PowerPoint.
✦TV: Para dispositivos como televisores, ou seja, com baixa resolução, quantidade de cores e scroll 
limitado.
✦Speech: Para sintetizadores de voz.


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Múltiplas Media Features com CSS

19- Media Features
Para diferenciar um dispositivo do outro, você precisa utilizar as características de cada um, 
para isso usamos as Media Features. Dessa forma definimos se nosso dispositivo será um smartphone, 
tablet ou pc comum.

20- Media Queries, Media types e Media Features
São a "mesma" coisa, em outras palavras elas possuem a mesma finalidade, porém cada uma possui sua própria
caracteristica, Media Queries é Media types e Features, já Media types e Features são o que defini o que
Media Queries, Media types é reposável por informar qual é o tipo de mídia, enquanto o Media Features é 
reponsável por informa a característica de mídia 
Ex:
Media Type irá iforma que o arquivo será exibido por uma tela, enquanto o Media Features é reponsável por 
determinar a característica da tela, se ela é uma tela de 5 ou de 60 polegadas


21- Como usar Media Features
Ex:
<link
      rel="stylesheet"
      href="arquivos_css/style_retrado.css"
      media="screen and (orientation: portrait)"
    />

OBS: o Media Features é o que está entre parentes dentro de media



<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Reunindo tudo em um único CSS

22- Para adicionar mais de uma folha de estilo na mesma página do html basta adicoanr o comando 
"@media screen and (x) {
      @media screen and (orientation: portrait) {
        body {
          background-image: url("../imagens/cev-portrait.jpg");
          background-position: center bottom;
        }
      }


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Mobile First

23- O que é Mobile First 
Um projeto que faz a criação de projetos web e sites primeiro em dispositivos móveis, para depois fazer 
adaptações para o desktop e outras plataformas

24- #Estudar Mobile First 


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula: Device breakpoints

25- 
/* Typical Device Breakpoints
------------------------------
Pequenas telas: até 600px
Celular: de 600px até 768px
Tablet: 768px até 992px
Desktop: 992px até 1200px
Grandes telas: acima de 1200px
*/

26 Exemplo prático de Media Queries
acesse o explorador de arquivos > programaçõa_git > 04-modulo_html_css > 29-impressora_mq > 04-arquivo


<<Fim da Aula>>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

► Aula:  Avançar: Media Queries para outros dispositivos

27- Como crair um meno retrátil
acesse o explorador de arquivos > programaçõa_git > 04-modulo_html_css > 29-impressora_mq > 05.2-arquivo























